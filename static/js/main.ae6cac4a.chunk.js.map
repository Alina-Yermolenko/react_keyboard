{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","press","event","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,MAAQ,SAACC,GACHA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAW,2BAAD,OAA6BE,EAAMC,QAfnE,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,SAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,SAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,UAzBX,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.ae6cac4a.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.press);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.press);\n  }\n\n  press = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ pressedKey: `The last pressed key is ${event.key}` });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}